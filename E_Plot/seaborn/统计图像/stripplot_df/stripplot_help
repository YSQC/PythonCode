seaborn.stripplot(x=None, y=None, hue=None, data=None, order=None, hue_order=None, jitter=True,
                    dodge=False, orient=None, color=None, palette=None, size=5, edgecolor='gray',
                    linewidth=0, ax=None, **kwargs)
Draw a scatterplot where one variable is categorical.

Parameters:
    x, y, hue : names of variables in data or vector data, optional
        Inputs for plotting long-form data. See examples for interpretation.

    data : DataFrame, array, or list of arrays, optional
        Dataset for plotting. If x and y are absent, this is interpreted as wide-form. Otherwise it is expected to be long-form.

    order, hue_order : lists of strings, optional
        Order to plot the categorical levels in, otherwise the levels are inferred from the data objects.

    jitter : float, True/1 is special-cased, optional
        Amount of jitter (only along the categorical axis) to apply. This can be useful when you have many points and they overlap, so that it is easier to see the distribution. You can specify the amount of jitter (half the width of the uniform random variable support), or just use True for a good default.

    dodge : bool, optional
        When using hue nesting, setting this to True will separate the strips for different hue levels along the categorical axis. Otherwise, the points for each level will be plotted on top of each other.

    color : matplotlib color, optional
        Color for all of the elements, or seed for a gradient palette.

    palette : palette name, list, or dict, optional
        Colors to use for the different levels of the hue variable. Should be something that can be interpreted by color_palette(), or a dictionary mapping hue levels to matplotlib colors.

    size : float, optional
        Diameter of the markers, in points. (Although plt.scatter is used to draw the points, the size argument here takes a “normal” markersize and not size^2 like plt.scatter.

    edgecolor : matplotlib color, “gray” is special-cased, optional
        Color of the lines around each point. If you pass "gray", the brightness is determined by the color palette used for the body of the points.

    linewidth : float, optional
        Width of the gray lines that frame the plot elements.

    ax : matplotlib Axes, optional
        Axes object to draw the plot onto, otherwise uses the current Axes.